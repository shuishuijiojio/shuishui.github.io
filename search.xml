<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/11/25/java_%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B/"/>
      <url>/2022/11/25/java_%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <meta charset="utf-8">  <meta name="viewport" content="width=device-width, initial-scale=1.0">  <title>java</title>  <link rel="stylesheet" href="https://stackedit.io/style.css" /></head><body class="stackedit">  <div class="stackedit__html"><h1><a id="_JAVA_0"></a>一 JAVA的基础前列</h1><p><img src="https://img-blog.csdnimg.cn/e534df563baa4dd8b05fec349e65f5c4.png#pic_center" alt="在这里插入图片描述"></p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> leixing<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> leixing<span class="token punctuation">&#123;</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">byte</span> b <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span> <span class="token keyword">short</span> s <span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">30</span> <span class="token punctuation">;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> n <span class="token operator">=</span> <span class="token number">999999</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">10.1f</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">20.2</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>Java中的类型</p><ol><li><mark>整数的四种类型</mark>   Byete  Short Int Long:定义long类型时需要加入L的标识.</li><li><mark>浮点数的俩种类型</mark> float         double   :定义float类型变量时需要加入F的标识.</li><li><mark>字符</mark>   char</li><li><mark>布尔</mark> Boolean</li><li><img src="https://img-blog.csdnimg.cn/f270450b842046ffac335debcc1c83a9.png#pic_center" alt="在这里插入图片描述"></li></ol><h1><a id="__38"></a>二 类型的练习</h1><p><img src="https://img-blog.csdnimg.cn/66ca9b7de0a94eee8208189f71cde53a.png#pic_center" alt="在这里插入图片描述"></p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> self<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> self<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">"黑马谢广坤"</span> <span class="token punctuation">;</span>      <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>      <span class="token keyword">char</span>  gender <span class="token operator">=</span> <span class="token char">'男'</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> height<span class="token operator">=</span> <span class="token number">180.1</span><span class="token punctuation">;</span>      <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>       <span class="token comment">//输出</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>gender<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><ol><li>先定义变量与类型</li><li>给予赋值</li><li>输出变量名</li></ol><h1><a id="__66"></a>三 键盘录入</h1><pre class=" language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>  <span class="token comment"><code class="language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>  <span class="token comment">//导包 :在类之上导包</span><span class="token keyword">public</span> claas <span class="token class-name">ScannerDemol</span><span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//创建对象,表示我现在准备用这个Scanner这个类</span>    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">prntln</span><span class="token punctuation">(</span><span class="token string">"请输入一个整数"</span><span class="token punctuation">)</span>    <span class="token comment">//接收数据</span>    <span class="token comment">//变量i记录了键盘录入的数据</span>    <span class="token keyword">int</span> i <span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><ul><li>键盘输入根据自己输入第一个的数字而打印出.</li></ul><ol><li>输入俩个数字并相加.</li></ol><pre class=" language-prism language-java"><span class="token comment"><code class="language-prism language-java"><span class="token comment">//导包</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> day5<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建对象</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入第一个数字"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">int</span> num1 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//接收键盘输入的数字</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入第二个数字"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">int</span> num2 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//接收键盘输入的数字</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num1<span class="token operator">+</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入俩个数字后相加</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h1><a id="_1_117"></a>四 1.隐式转换/强制转换</h1><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-rrUd2KD4-1669302233601)(image-20221118175117661.png)]</p><ol><li><p>类型不相同时需要转换成同一个类型才能继续计算</p></li><li><p>Byte,short,char转换时直接转换成int类型参与计算</p></li><li></li></ol><pre class=" language-prism language-java"> <span class="token keyword">public</span> <span class="token keyword">class</span> day6<span class="token punctuation"><code class="language-prism language-java"> <span class="token keyword">public</span> <span class="token keyword">class</span> day6<span class="token punctuation">&#123;</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">byte</span> b1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>     <span class="token keyword">byte</span> b2 <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>     <span class="token keyword">byte</span> result <span class="token operator">=</span> b1<span class="token operator">+</span>b2<span class="token punctuation">;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span></code></pre><ol><li>如果强制转换Byte成Byte会报错 ;数值超过了byte的总值</li><li>而Byte运算时会自动转为int类型参与计算</li><li>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-hgX84VkK-1669302233602)(image-20221118180156821.png)]</li></ol><h3><a id="2_148"></a>2.字符串的拼接</h3><ol><li>字符和整数拼接时并不会相加而是相连接在一起</li></ol><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day7<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day7<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> num1 <span class="token operator">=</span> <span class="token string">"1111"</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token number">222</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num1<span class="token operator">+</span>num2<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3><a id="3_166"></a>3.录入三位数,获取它的个,十,百,位</h3><pre class=" language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> day8<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入一个三位数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取个位:%10</span>    <span class="token comment">//获取十位:/10%10</span>    <span class="token comment">//获取百位:/100%10</span>    <span class="token keyword">int</span> ge <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> shi <span class="token operator">=</span> num <span class="token operator">/</span><span class="token number">10</span> <span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> bai <span class="token operator">=</span> num <span class="token operator">/</span><span class="token number">100</span> <span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ge<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>shi<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bai<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h1><a id="__193"></a>六 流程控制语句</h1><h3><a id="if_195"></a>if语句</h3><pre class=" language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token comment"><code class="language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token comment">//导包</span><span class="token keyword">public</span> <span class="token keyword">class</span> day9<span class="token punctuation">&#123;</span>           <span class="token comment">//主语句,类,类名</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token comment">//主语句</span>   <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入你的酒量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//提取键盘输入的值</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小伙子酒量不错"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第一个输出语句</span>   <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小伙子酒量还得练啊"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第二部分输出语句</span>   <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><ol><li>if———else语句</li><li>根据判断语句,如果为真则输出if语句中的第一个输出语句,反之为假输出else语句</li></ol><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day10分支语句<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day10分支语句<span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> ranking <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">//这里如果为2贼小红不会做他的女朋友</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ranking<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小红做他的女朋友"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小红不会做他的女朋友"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><ol><li>根据流程语句来判断<mark>true</mark> /<mark>false</mark></li></ol><h3><a id="if_else_238"></a>if else语句</h3><pre class=" language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> day10分支语句<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请录入一个整数表示你的成绩"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> score<span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">0</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">>=</span><span class="token number">95</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"送自行车一辆"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">90</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">94</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"送游乐园一日游"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">80</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">93</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"送变形金刚"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"吊树上打一顿"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><ol><li>如果超过100则不会继续输出下面的语句</li><li>修改后</li></ol><pre class=" language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> day10分支语句<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请录入一个整数表示你的成绩"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> score<span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">0</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">>=</span><span class="token number">95</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"送自行车一辆"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">90</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">94</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"送游乐园一日游"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">80</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">93</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"送变形金刚"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"吊树上打一顿"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你搁这吹牛逼呢"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>超过数值后会直接跳过中间的语句,直接输出最后语句else语句.</p></div></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编程语言</title>
      <link href="/2022/11/23/java%E5%85%A5%E9%97%A8-%E9%9D%A2%E5%AF%B9%E5%AF%B9%E8%B1%A1-%E7%B1%BB-%E6%96%B9%E6%B3%95-%E6%95%B0%E7%BB%84-%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E7%B2%BE%E7%BB%86%E8%AE%B2%E8%A7%A3/"/>
      <url>/2022/11/23/java%E5%85%A5%E9%97%A8-%E9%9D%A2%E5%AF%B9%E5%AF%B9%E8%B1%A1-%E7%B1%BB-%E6%96%B9%E6%B3%95-%E6%95%B0%E7%BB%84-%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E7%B2%BE%E7%BB%86%E8%AE%B2%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <meta charset="utf-8">  <meta name="viewport" content="width=device-width, initial-scale=1.0">  <title>java入门-面对对象-类-方法-数组-分支语句-循环语句精细讲解</title>  <link rel="stylesheet" href="https://stackedit.io/style.css" /></head><body class="stackedit">  <div class="stackedit__html"><h1><a id="_JAVA_0"></a>一 JAVA数据类型</h1><p><img src="https://img-blog.csdnimg.cn/99abb8ee89ec4f5aaed77ca45c1bf082.png#pic_center" alt="在这里插入图片描述"></p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> leixing<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> leixing<span class="token punctuation">&#123;</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">byte</span> b <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span> <span class="token keyword">short</span> s <span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">30</span> <span class="token punctuation">;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> n <span class="token operator">=</span> <span class="token number">999999</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">10.1f</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">20.2</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>Java中的类型</p><ol><li><mark>整数的四种类型</mark>   Byete  Short Int Long:定义long类型时需要加入L的标识.</li><li><mark>浮点数的俩种类型</mark> float         double   :定义float类型变量时需要加入F的标识.</li><li><mark>字符</mark>   char</li><li><mark>布尔</mark> Boolean</li><li><img src="https://img-blog.csdnimg.cn/05628361a2d04d0386807ffd4d850ede.png#pic_center" alt="在这里插入图片描述"></li></ol><h1><a id="__37"></a>二 类型的练习</h1><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> self<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> self<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">"坤坤"</span> <span class="token punctuation">;</span>      <span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>      <span class="token keyword">char</span>  gender <span class="token operator">=</span> <span class="token char">'男'</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> height<span class="token operator">=</span> <span class="token number">180.1</span><span class="token punctuation">;</span>      <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>       <span class="token comment">//输出</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>gender<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><ol><li>先定义变量与类型</li><li>给予赋值</li><li>输出变量名</li></ol><h1><a id="__63"></a>三 键盘录入</h1><pre class=" language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>  <span class="token comment"><code class="language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>  <span class="token comment">//导包 :在类之上导包</span><span class="token keyword">public</span> claas <span class="token class-name">ScannerDemol</span><span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> main <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//创建对象,表示我现在准备用这个Scanner这个类</span>    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">prntln</span><span class="token punctuation">(</span><span class="token string">"请输入一个整数"</span><span class="token punctuation">)</span>    <span class="token comment">//接收数据</span>    <span class="token comment">//变量i记录了键盘录入的数据</span>    <span class="token keyword">int</span> i <span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><pre class=" language-prism language-java"><span class="token comment"><code class="language-prism language-java"><span class="token comment">//导包</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> day5<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建对象</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入第一个数字"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">int</span> num1 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//接收键盘输入的数字</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入第二个数字"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">int</span> num2 <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//接收键盘输入的数字</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num1<span class="token operator">+</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入俩个数字后相加</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h1><a id="_1_111"></a>四 1.隐式转换/强制转换</h1><ol><li><p>类型不相同时需要转换成同一个类型才能继续计算</p></li><li><p>Byte,short,char转换时直接转换成int类型参与计算</p></li><li></li></ol><pre class=" language-prism language-java"> <span class="token keyword">public</span> <span class="token keyword">class</span> day6<span class="token punctuation"><code class="language-prism language-java"> <span class="token keyword">public</span> <span class="token keyword">class</span> day6<span class="token punctuation">&#123;</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">byte</span> b1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>     <span class="token keyword">byte</span> b2 <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>     <span class="token keyword">byte</span> result <span class="token operator">=</span> b1<span class="token operator">+</span>b2<span class="token punctuation">;</span>     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span></code></pre><ol><li>如果强制转换Byte成Byte会报错 ;数值超过了byte的总值</li><li>而Byte运算时会自动转为int类型参与计算</li><li><img src="https://img-blog.csdnimg.cn/b6748913ef4d4c698fdf6cc4b0b7ab97.png" alt="在这里插入图片描述"></li></ol><h3><a id="2_143"></a>2.字符串的拼接</h3><ol><li>字符和整数拼接时并不会相加而是相连接在一起</li></ol><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day7<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day7<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> num1 <span class="token operator">=</span> <span class="token string">"1111"</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token number">222</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num1<span class="token operator">+</span>num2<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3><a id="3_160"></a>3.录入三位数,获取它的个,十,百,位</h3><pre class=" language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> day8<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入一个三位数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取个位:%10</span>    <span class="token comment">//获取十位:/10%10</span>    <span class="token comment">//获取百位:/100%10</span>    <span class="token keyword">int</span> ge <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> shi <span class="token operator">=</span> num <span class="token operator">/</span><span class="token number">10</span> <span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> bai <span class="token operator">=</span> num <span class="token operator">/</span><span class="token number">100</span> <span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ge<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>shi<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bai<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3><a id="4_184"></a>4.算数运算符</h3><p><img src="https://img-blog.csdnimg.cn/2bc150d1a72f46c5bc84b1ac6c4ae564.png" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-1CRRooiG-1669532926306)(image-20221118204831382.png)]"></p><h3><a id="5_189"></a>5.自增自减运算符</h3><p><img src="https://img-blog.csdnimg.cn/798ea48623af45d58a79c060c08473a0.png" alt="在这里插入图片描述"></p><h3><a id="6_193"></a>6.赋值运算符</h3><p><img src="https://img-blog.csdnimg.cn/c01464e47f3940289fa1a34d8cd568e7.png" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-hyehmbYn-1669532926307)(image-20221118205357743.png)]"></p><h3><a id="7_198"></a>7.关系运算符</h3><p><img src="https://img-blog.csdnimg.cn/0f7645489e7e4abda768c104b20cccc5.png" alt="在这里插入图片描述"></p><h3><a id="8_203"></a>8.逻辑运算符</h3><p><img src="https://img-blog.csdnimg.cn/250508ed31f640f69a73958f7307a392.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/e2be64c7d1ac4367ac74071bbb8bf281.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/7482359a29c04c66be795d01f4a4b434.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/64d23292a3ba477995cf004c2ef59672.png" alt="在这里插入图片描述"></p><h3><a id="9_213"></a>9.运算符的优先级</h3><p><img src="https://img-blog.csdnimg.cn/d99d839a81514532966ba42ff0135dfc.png" alt="在这里插入图片描述"></p><h1><a id="__218"></a>五 原码,反码,补码</h1><p>暂无!</p><h1><a id="__230"></a>六 流程控制语句</h1><h3><a id="if_232"></a>if语句</h3><p><img src="https://img-blog.csdnimg.cn/0ae3d03f68bb4ba09d4ae4918a289904.png" alt="在这里插入图片描述"></p><pre class=" language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token comment"><code class="language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token comment">//导包</span><span class="token keyword">public</span> <span class="token keyword">class</span> day9<span class="token punctuation">&#123;</span>           <span class="token comment">//主语句,类,类名</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token comment">//主语句</span>   <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入你的酒量"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">int</span> num <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//提取键盘输入的值</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token operator">>=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小伙子酒量不错"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第一个输出语句</span>   <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小伙子酒量还得练啊"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第二部分输出语句</span>   <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/2a1a9227959f4e6eabde75361d615d9b.png" alt="在这里插入图片描述"></p><ol><li>if———else语句</li><li>根据判断语句,如果为真则输出if语句中的第一个输出语句,反之为假输出else语句<br>3.<img src="https://img-blog.csdnimg.cn/0929dd8c67e04c6cb54a9902e05b5633.png" alt="在这里插入图片描述"></li></ol><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day10分支语句<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day10分支语句<span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> ranking <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">//这里如果为2贼小红不会做他的女朋友</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ranking<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小红做他的女朋友"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>   <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小红不会做他的女朋友"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/367266d7bb0e4112a430672b0e074f66.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/b2f506f271e94a75adec47834994045d.png" alt="在这里插入图片描述"></p><ol><li><p>根据流程语句来判断<mark>true</mark> /<mark>false</mark></p></li><li><p><img src="https://img-blog.csdnimg.cn/d48c651713db4ec68d1383c2281ac380.png" alt="在这里插入图片描述"></p></li></ol><h3><a id="if_else_288"></a>if else语句</h3><p><img src="https://img-blog.csdnimg.cn/75a1af41eb1f4dd5990b2f4904511c94.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/977f1675934c45e89d649a9977f7c62a.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/a2be7be74fe64fb9b5e66bec452fbc37.png" alt="在这里插入图片描述"></p><pre class=" language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> day10分支语句<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请录入一个整数表示你的成绩"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> score<span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">0</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">>=</span><span class="token number">95</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"送自行车一辆"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">90</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">94</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"送游乐园一日游"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>score<span class="token operator">></span><span class="token number">80</span><span class="token operator">&&</span>score<span class="token operator"><=</span><span class="token number">93</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"送变形金刚"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"吊树上打一顿"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/af8959a3325f43bb8e7403050927d81c.png" alt="在这里插入图片描述"></p><ol><li>如果超过100贼不会继续输出下面的语句</li><li>修改后</li></ol><pre><code>import java.util.Scanner;public class day10分支语句&#123;  public static void main(String[]args)&#123;    Scanner sc = new Scanner(System.in);      System.out.println("请录入一个整数表示你的成绩");int score= sc.nextInt();    if(score&gt;0&amp;&amp;score&lt;=100)&#123;      if(score&gt;=95&amp;&amp;score&lt;=100)&#123;        System.out.println("送自行车一辆");      &#125;else if(score&gt;90&amp;&amp;score&lt;=94)&#123;        System.out.println("送游乐园一日游");      &#125;else if(score&gt;80&amp;&amp;score&lt;=93)&#123;        System.out.println("送变形金刚");      &#125;else&#123;        System.out.println("吊树上打一顿");      &#125;    &#125;else&#123;System.out.println("你搁这吹牛逼呢");&#125;  &#125;&#125;</code></pre><p><img src="https://img-blog.csdnimg.cn/1fa4a976063a4449805c2572900c3dbf.png" alt="在这里插入图片描述"></p><ol><li>超过数值后会直接跳过中间的语句,直接输出最后语句else语句.</li></ol><h4><a id="_354"></a>练习题</h4><p>1.根据不同会员的等级打折不同的力度</p><p><img src="https://img-blog.csdnimg.cn/d0f9ad98478f470e92c09c5cd0027dd2.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/1b688087ad8b403e96a828e9371426e7.png" alt="在这里插入图片描述"></p><p>在这里插入图片描述</p><p><img src="https://img-blog.csdnimg.cn/826d825812054bf9ae5f0761a54910b8.png" alt="在这里插入图片描述"></p><h3><a id="Switch_366"></a>Switch语句</h3><ol><li>switch语句格式</li><li><img src="https://img-blog.csdnimg.cn/a3568488300e43d7b8922b16e4463a82.png" alt="在这里插入图片描述"></li></ol><p><img src="https://img-blog.csdnimg.cn/5348feeb4ff949fea0995b36810086ae.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2b3c66d07dbb455db48528802cfb2a86.png" alt="在这里插入图片描述"></p><h2><a id="case___Switch___380"></a>case穿透__ Switch__</h2><p><img src="https://img-blog.csdnimg.cn/19cfce2cb40f4224ab4e1b4f57608047.png" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-zOzOKyY0-1669532926314)(image-20221119133457135.png)]"></p><ol><li>语句中没有书写brke语句,Switch语句就会一直输出到最后一条语句</li><li>default语句可以在语句中的任何位置</li><li>jdk12中的简化写法</li><li>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-rkTeDZxN-1669532926314)(image-20221119134010715.png)]</li></ol><p><img src="https://img-blog.csdnimg.cn/516426d556704cafb855f606c213e84f.png" alt="在这里插入图片描述"></p><h2><a id="for_395"></a>for循环</h2><p><img src="https://img-blog.csdnimg.cn/0ef46f1122a64697af74115f15385d3d.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/3a122c34b56e4b01b0d57b83b1eb70a5.png" alt="在这里插入图片描述"></p><ol><li>for语句循环体结构输出步骤<br>2.<img src="https://img-blog.csdnimg.cn/4b3d2ec2e34e4b9684b917d52f01612d.png" alt="在这里插入图片描述"></li></ol><h4><a id="1_406"></a>练习题1</h4><p>打印十次Hello world</p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> for1<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> for1<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator"><=</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello world"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3><a id="_424"></a>小知识</h3><p><img src="https://img-blog.csdnimg.cn/ba99d39b81574491b4eb10bef5e80fce.png" alt="在这里插入图片描述"></p><ol><li>求和的变量不能定义在循环的里面,因为变量只在所属的大括号中有效</li><li>输出语句写在循环体的里面会造成,当前变量只会在本次循环中有效</li><li>在下次的循环中,变量会从内存中消失,不会累加</li></ol><h2><a id="while_436"></a>while语句</h2><p><img src="https://img-blog.csdnimg.cn/0e854415353a472099e70025aa7bdd6f.png" alt="在这里插入图片描述"></p><p>1~100打印</p><p><img src="https://img-blog.csdnimg.cn/a1d73a95792642dcbd749504888bd6e8.png" alt="在这里插入图片描述"></p><h2><a id="forwhlie_446"></a>for循环与whlie循环对比</h2><p><img src="https://img-blog.csdnimg.cn/a0e7518a60a542b593576eea9a9a1905.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/282f0dbc0a4443a382ec2603189565af.png" alt="在这里插入图片描述"></p><h1><a id="__454"></a>七 数组</h1><p><img src="https://img-blog.csdnimg.cn/43ccf216a319495ea6e0efbc81eacb57.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/dd0a9126d64c4a3ba17ad70a77b357ad.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/59e7716b71984d2e8b9e4f5155f3b9aa.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/0fc62fe567bd4b749b478466869cba40.png" alt="在这里插入图片描述"></p><ol><li><p>动态初始化</p></li><li><p><img src="https://img-blog.csdnimg.cn/320d210d9fd646a281369805d0bd91e7.png" alt="在这里插入图片描述"></p></li><li><p>数组中的比大小</p></li><li><p><img src="https://img-blog.csdnimg.cn/4dcdec8d167a454f9482eca6d8159394.png" alt="在这里插入图片描述"></p></li></ol><h3><a id="1_480"></a>练习题1</h3><p><img src="https://img-blog.csdnimg.cn/e3239fa9569345999694d4227927ae00.png" alt="在这里插入图片描述"></p><ol><li></li></ol><ol start="2"><li></li></ol><p><img src="https://img-blog.csdnimg.cn/ca3fecfa6f7d4d4e9cb334957cd31cbe.png" alt="在这里插入图片描述"></p><p>​3.<br><img src="https://img-blog.csdnimg.cn/42181b62a59940b3ab71b498e8763f75.png" alt="在这里插入图片描述"></p><p>​4.println中的ln是输出时换行,去掉ln课使输出时不换行,在一行中显示<br><img src="https://img-blog.csdnimg.cn/8441a56dd4534cac9d4fedbae3db205b.png" alt="在这里插入图片描述"></p><h1><a id="__java_504"></a>八  java的内存分配</h1><p><img src="https://img-blog.csdnimg.cn/0d99deecadfa460b89b4ce0c2270b283.png" alt="在这里插入图片描述"></p><ol><li><p><img src="https://img-blog.csdnimg.cn/59600380b19a4db8a7d8cb1ebf0a4f1a.png" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ODeWc5Js-1669532926326)(image-20221120142156622.png)]"></p><ol><li>栈堆方法区本地方法栈  寄存器</li></ol></li></ol><p><img src="https://img-blog.csdnimg.cn/e9f8412db29d4f0687ac2be3c7f09e0f.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/9359f3f2d63a4b2385d89ac4068d529d.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/9da97bfd0e294938ac86b8b7a83a9fe2.png" alt="在这里插入图片描述"></p><h1><a id="__520"></a>九 方法</h1><p><img src="https://img-blog.csdnimg.cn/8416eaf1a47240d78b855c5cb7a31648.png" alt="在这里插入图片描述"></p><h2><a id="1__524"></a>1. 方法的格式</h2><p><img src="https://img-blog.csdnimg.cn/9758611a2dea42b283b97a528b6f8237.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/0f739f17ddda40b6b20f384c42fb0759.png" alt="在这里插入图片描述"></p><h2><a id="2_532"></a>2.方法的定义/调用方式</h2><p><img src="https://img-blog.csdnimg.cn/286453b23ad6446284d868ac140c8476.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/b03cee9799f6404d843c9310a38f287f.png" alt="(image-20221120143825058.png)]"></p><pre><code>public static void 方法名</code></pre><p><img src="https://img-blog.csdnimg.cn/dbc6f29ec2d94d33823703243c0d2530.png" alt="在这里插入图片描述"></p><p>​2.打包代码后利用方法名调用方法</p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day11<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day11<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printGFInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printGFInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"小红"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"萌妹子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"18岁"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h2><a id="3_564"></a>3.带参数的方法定义和调用</h2><p><img src="https://img-blog.csdnimg.cn/76c94f25119a4c35bfc897c41f949672.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/d4aa9797b1ad41ca891ce4ef317fbd2f.png" alt="在这里插入图片描述"></p><h2><a id="4_579"></a>4.带返回值的方法</h2><p><img src="https://img-blog.csdnimg.cn/954e64b3eaa54162adc2be7d688a07c8.png" alt=""></p><p><img src="https://img-blog.csdnimg.cn/7307e2486d094d87a06a1fd54d24c270.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/8246eda9ce66465796fe69bc7f32ce8a.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/3aae650aba6d420ab286cbdba4b727c5.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/272ea935ebb545b5bc4d729233558f15.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/9b3a01f44cee4e338ab9034396b6d888.png" alt="在这里插入图片描述"></p><h2><a id="_628"></a>总结</h2><p><img src="https://img-blog.csdnimg.cn/e816be151b0c44c5a62ab10fe2a6e860.png" alt="在这里插入图片描述"></p><ol><li>如果有返回值就要写返回值类型,没有就写void</li><li>方法名要驼峰命名,看词知意</li></ol><p><img src="https://img-blog.csdnimg.cn/35802b3573da430893e5e51b744b38b1.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/cf4af784f6ed4cc2bcb71c5c1b2a8480.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/940a85d9e43b4711af293d8e13961c52.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/12788ada6bd046e5a513855fed08f308.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/9dd46a3d110a471b921ab4b42f1ed528.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/262a84ab915b46e4a2c7dc9a34f3a59d.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/0577d3824c49487dbc30d243cf5d616a.png" alt="在这里插入图片描述"></p><h3><a id="return__687"></a>return 关键字</h3><p><img src="https://img-blog.csdnimg.cn/907f9c7fff1f4f6e90feadea7fbf3a36.png" alt=""></p><h2><a id="5_692"></a>5.方法重载</h2><ul><li>在同一个类中,方法名相同,参数不同,就构成了重载,与返回值无关</li></ul><p><img src="https://img-blog.csdnimg.cn/da16bd26f4654095acc3c0eae4ae15ec.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/9cde9b53ff9e4a089ec5a816ce527a50.png" alt="在这里插入图片描述"></p><h3><a id="4_702"></a>练习题4</h3><p>定义数组的遍历:</p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day12<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day12<span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//定义数组</span>  <span class="token function">fn</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用方法遍历数组</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>arr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator"><</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/a7e4669b22ff4f0ca272131442eabea2.png" alt="在这里插入图片描述"></p><p>​</p><h3><a id="5_739"></a>练习题5</h3><ol><li><p>设计一个方法数组的最大值,并求出最大返回 值.</p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day13<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day13<span class="token punctuation">&#123;</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token comment">//1.定义数组</span>     <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>          <span class="token comment">//2.调用方法求最大值</span>      <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token function">getMax</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//3.打印</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>  <span class="token comment">//定义方法</span>  <span class="token comment">//首先问自己:我要干嘛?  求最大值</span>  <span class="token comment">//我干这件事,需要完成什么?  数组</span>  <span class="token comment">//是否返回?  返回</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getMax</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> max <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i<span class="token operator"><</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">></span>max<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        max <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> max<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><img src="https://img-blog.csdnimg.cn/c2869b4b4fae44d0b15f9c96112e4634.png" alt="在这里插入图片描述"></p></li></ol><h3><a id="6_777"></a>练习题6</h3><ol><li><p>定义一个方法判断数组中某一个数是否存在,将结果返回给调用处</p></li><li><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day14<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day14<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//定义数组</span>    <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token comment">//判断一个数字在数组中是否存在/调用方法</span>    <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token function">contains</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//打印出来</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//定义方法</span>  <span class="token comment">//首先问自己:我要干嘛?  判断数字是否存在</span>  <span class="token comment">//我干这件事,需要完成什么?  数组    数字是什么</span>  <span class="token comment">//是否返回?  返回  true  false</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>arr<span class="token punctuation">,</span> <span class="token keyword">int</span> number<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator"><</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> number<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//什么时候才能判定数组中存在于不存在,得先遍历完后数组在进行比较后才能确定是否存在.</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre></li></ol><p><img src="https://img-blog.csdnimg.cn/3f3221925038412cb6a5dbef0cedfcce.png" alt="在这里插入图片描述"></p><h3><a id="7_814"></a>练习题7</h3><p>定义一个方法copyOfRange(int[] arr,int to,int from);</p><p>功能: 将数组arr中从索引from(包含from)开始,到索引to结束(不包含to)的元素到新数组中,将数组返回</p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day15<span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day15<span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">/*定义一个方法copyOfRange(int[] arr,int to,int from);功能: 将数组arr中从索引from(包含from) 开始到索引to结束(不包含to)的元素到新数组中,将数组返回*/</span>     <span class="token comment">//1.定义原始数组</span>    <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">&#125;</span>    <span class="token comment">//2.调用方法拷贝数组</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> copy <span class="token operator">=</span> <span class="token function">copyOfRange</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>from<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token keyword">to</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//遍历copy</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i<span class="token operator"><</span>copy<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>copy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"  "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//将数组arr中从索引from(包含from)开始,到索引to结束(不包含to)的元素复制到新的数组中</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token function">copyOfRange</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>arr<span class="token punctuation">,</span><span class="token keyword">int</span> from<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//1.定义数组</span>  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token keyword">to</span><span class="token operator">-</span>from<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//2.把原始数组arr中的from到to对应的元素,直接拷贝到newarr中</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>from<span class="token punctuation">;</span>i<span class="token operator"><</span><span class="token keyword">to</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//伪造索引的思想</span>    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    newArr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token comment">//把数组返回</span>   <span class="token keyword">return</span> newArr<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h2><a id="6_854"></a>6.方法的内存</h2><p><img src="https://img-blog.csdnimg.cn/49b49d5d94624abeb473e8e74e5b2ba2.png" alt="在这里插入图片描述"></p><ol><li>方法调用的基本内存原理</li></ol><ul><li>先进后出</li></ul><ol><li><mark>基本数据类型</mark> 引用数据类型</li></ol><ul><li>整数类型 除了基本数据类型的所有类型</li><li>浮点数类型</li><li>布尔类型</li><li>字符类型</li></ul><p><mark>当我们传递基本数据类型时,传递的是真实的数据,形参的改变,不影响实际参数的值</mark></p><p>变量作用的范围只在本方法内有效</p><p><mark>传递引用数据类型时,传递的是地址值,形参的改变,影响实际参数的值</mark></p><p><img src="https://img-blog.csdnimg.cn/4732f96be2ee40a1a3f651ecca60f961.png" alt="在这里插入图片描述"></p><h1><a id="_882"></a>综合练习</h1><p><img src="https://img-blog.csdnimg.cn/74ec42e4f76b41e8a416024c8f51d910.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/33e8a12643114bf4a1727cef547b443a.png" alt="在这里插入图片描述"></p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day2 <span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> day2 <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//ASCII码表</span><span class="token keyword">var</span> chs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//定义数组</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator"><</span>chs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator"><=</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>chs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//添加小写26个字母</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>chs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token operator">+</span>i<span class="token operator">-</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//添加大写26个字母</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token string">" "</span><span class="token punctuation">;</span> <span class="token comment">//System.out.println(chs);//打印所有的字母</span><span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//随机抽四次,抽取数组中的索引</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator"><</span><span class="token number">4</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> randomIndex<span class="token operator">=</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>chs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>result <span class="token operator">=</span> result <span class="token operator">+</span>chs<span class="token punctuation">[</span>randomIndex<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//System.out.println(chs[randomIndex]);</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> number <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//随机抽取数字</span>result <span class="token operator">=</span> result <span class="token operator">+</span> number<span class="token punctuation">;</span><span class="token comment">//生成最终结果</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//打印最终结果</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h1><a id="__937"></a>十 面向对象</h1><p><img src="https://img-blog.csdnimg.cn/e7b3c587ccaa4c6ebebfafc0fe9b1584.png" alt="在这里插入图片描述"></p><h2><a id="1_941"></a>1.面对对象重点学习</h2><ol><li>学习获取已有的对象并使用</li><li>学习如何自己设计对象并使用 :面向对象的语法</li></ol><p><img src="https://img-blog.csdnimg.cn/9d7db53ebabf4649b01701d8a3be7b6c.png" alt="在这里插入图片描述"></p><ul><li><p><mark>设计对象并使用</mark></p></li><li><p>类和对象</p></li><li><p>类(设计图):是对象共同特征的描述;</p></li><li><p>对象:是真实存在的具体东西</p></li><li><p><mark>在JAVA中,必须先设计类,才能获取对象</mark></p></li></ul><h2><a id="2_962"></a>2.如何定义类</h2><ol><li>成员变量(代表属性,一般是名词)</li><li>成员方法(代表行为,一般为动词)</li><li>构造器</li><li>代码块</li><li>内部类</li></ol><h2><a id="3_970"></a><mark>3.定义类的注意事项</mark></h2><ul><li><p>用来描述一类事务的类,专业叫做:Javabean类.;</p></li><li><p>在javabean类中是不写main类方法的</p></li><li><p>在以前编写main方法的类,叫做测试类.</p></li><li><p>我们可以在测试类中创建javabean类的对象并进行赋值调用</p><p>在javabean类中可以编写属性和行为</p></li><li><p><mark>成员变量:代表属性</mark></p></li><li><p><mark>成员方法:代表行为</mark></p></li></ul><ol><li>类名是字母建议大写,需要见名知意,驼峰命名</li><li>一个Java文件中可以定义多个class类,且只能是一个类是public修饰,而且public修饰的类名必须成为代码文件名.<mark>实际开发中建议还是一个文件定义一个class类</mark></li><li>成员变量的完整定义格式是:<mark>修饰符  数据类型 变量名称 = 初始化值</mark>  一般无需指定初始化值,存在默认值</li><li></li></ol><h2><a id="4_1016"></a>4.如何使用对象</h2><p><img src="https://img-blog.csdnimg.cn/cff4cac4cefa4824aa269a5598a92987.png" alt="在这里插入图片描述"></p><ol><li><p><mark>类和对象是什么</mark></p></li><li><p>类:是共同特征的描述(设计图),</p></li><li><p>对象:是真实存在具体实列</p></li><li><p><mark>如何得到对象</mark></p></li></ol><p><img src="https://img-blog.csdnimg.cn/5d15f3dcc9b74f8bb6ff55b46f61d5a6.png" alt="在这里插入图片描述"></p><ol><li><mark>拿到对象后能做什么?</mark></li></ol><ul><li>拿到对象后可以获取成员变量的值,或者给成员变量赋值</li><li>拿到对象后可以让成员方法帮我们做事情</li></ul><p><img src="https://img-blog.csdnimg.cn/e367c3e0057e4a7ba1a415d221f9ed94.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/1ddf98c327534e278d430083ed189fd1.png" alt="在这里插入图片描述"></p><h2><a id="5_1061"></a>5.封装</h2><ol><li>拿到需求之后,精确的定义属性与方法</li></ol><p><mark>对象代表什么,就得封装对应的数据,并提供数据对应的行为</mark></p><p><img src="https://img-blog.csdnimg.cn/074f1ff1e20044f38ca7a9253a70545d.png" alt="在这里插入图片描述"></p><ol><li><mark>private关键字</mark></li></ol><ul><li>是一个权限修饰符</li><li>可以修饰成员</li><li>被private修饰的成员只能在本类中才能访问</li></ul><p><img src="https://img-blog.csdnimg.cn/e45086ab5a7c44e8888818cced9dc570.png" alt="在这里插入图片描述"></p><ol><li><mark>利用get/set方法保护数据</mark></li><li><mark>set:给成员赋值</mark></li><li><mark>get: 用于获取成员变量的值</mark><br><img src="https://img-blog.csdnimg.cn/d6fb132bb1e74cf5a9602a8fa8249d97.png" alt="在这里插入图片描述"></li></ol><h2><a id="6this_1103"></a>6.this关键字</h2><ol><li><mark>把变量定义在方法里它就是局部变量</mark></li><li><mark>而把变量定义在类当中就是成员变量</mark></li></ol><p>就近原则:</p><p><mark>输出时有同一个相同的变量名,就会使用就近原则,使用最近的变量名</mark></p><p>在输出时加上this. 输出语句就会输出成员变量中的变量</p><h2><a id="7_1120"></a>7.构造方法</h2><p><mark>在创建对象的时候给成员变量进行赋值</mark></p><p><img src="https://img-blog.csdnimg.cn/133726ad5ff24fb98dc7e993bc4f53f3.png" alt="在这里插入图片描述"></p><ol><li>作用:在创建对象的时候给成员变量初始化的.</li></ol><p><img src="https://img-blog.csdnimg.cn/0b8c8e4f5d214d3bbbbba7fd452d0601.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/5288e4f55cac4d138d22ae64240d4188.png" alt="在这里插入图片描述"></p><p>构造方法是在定义变量时会直接被调用</p><p>如果我们自己没有写如何的构造方法;那么虚拟机给我们加一个空参构造方法</p><pre class=" language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> gaozao1 <span class="token punctuation"><code class="language-prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> gaozao1 <span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>        <span class="token keyword">public</span> gaozao1 <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token function">gaozao1</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age <span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> name<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> age<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><h3><a id="_1187"></a>注意事件</h3><ol><li>构造方法的定义</li></ol><ul><li>如果没有定义构造方法,系统将给出一个默认的无参数构造方法</li><li>如果定义了构造方法,系统将不会再提供默认的构造方法</li></ul><p>​2.构造方法的重载</p><ul><li>带参构造方法,和无参构造方法,俩者方法名相同,但是参数不同,这叫构造方法的重载</li></ul><p>​3.构造方法的使用方式</p><ul><li><mark>无论是否使用,都手动书写无参数构造方法,和带全部参数的构造方法</mark></li></ul><h3><a id="_1216"></a>总结</h3><ol><li>创建对象的时候,由虚拟机自动调用,给成员变量进行初始化的.</li></ol><p>​2.无参数的构造方法:初始化对象时,成员变量的数据均采用默认值</p><p>​3.有参数的构造方法:在初始化对象的时候,同时可以为对象进行赋值</p><p>​4.如何类定义出来默认就带了无参数构造器</p><p>​5.一旦定义了有参数的构造器,由系统提供的默认无参数构造器就没有了,此时就需要自己写无参数构造器</p><p>​6.在写构造器时必须都手动写上无参数构造器和全部参数构造器方法</p><p><mark>创建对象的时候,虚拟机会自动调用构造方法,作用是给成员变量进行初始化的</mark></p><h2><a id="8_JavaBenan_1244"></a>8.标准 JavaBenan</h2><ol><li>类名需要见名知意</li><li>成员变量使用private</li><li>提供至少两个方法</li></ol><ul><li><p>无参构造方法</p></li><li><p>带全部参数构造方法</p><p>4.成员方法</p><ul><li>提供一个成员变量对应的set()     get()</li></ul></li><li><p>有其他行为,也需要写上</p></li></ul><p>快捷键</p><p>alt + insert</p><p>alt+fn+inser</p><h2><a id="9_1271"></a>9.面向对象内存</h2><ul><li>字节码文件加载时进入 方法区(元空间)</li><li>调用方法运行时就会进入栈空间,使用后会从栈空间出去</li><li>在new时new出来的东西就会在堆中开辟一个空间并会产生一个地址值</li></ul><p>​一个对象的内存步骤</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Os50NKTg-1669532926340)(image-20221123171355070.png)]</p><ol><li>加载class文件</li><li>申明局部变量</li><li>在堆内存中开辟一个空间</li><li>默认初始化</li><li>显示初始化</li><li>构造方法初始化</li><li>将堆内存中的地址值赋值给左边的局部变量</li></ol><p>基本数据类型</p><ul><li>是直接记录被赋值的值,数据值是存储在自己的空间中的</li><li>赋值给其他的变量,也是赋值的真是的值</li></ul><p>引用数据类型</p><ul><li>记录堆中的地址值,从而根据地址值去获取相应的值</li><li>赋值给其它变量时,赋值的是地址值</li></ul><h3><a id="this_1311"></a>this的内存原理</h3><p>this作用:区分局部变量和成员变量</p><p>this的本质:所在方法调用者的地址值</p><p>this是指向调用者使用的地址值</p><h3><a id="_1323"></a>成员变量和局部变量的区别</h3><p>}</p><pre><code>    public void setAge(int age)&#123;        this.age = age;    &#125;</code></pre><p>}</p><pre><code>### 注意事件1. 构造方法的定义- 如果没有定义构造方法,系统将给出一个默认的无参数构造方法- 如果定义了构造方法,系统将不会再提供默认的构造方法​2.构造方法的重载- 带参构造方法,和无参构造方法,俩者方法名相同,但是参数不同,这叫构造方法的重载​3.构造方法的使用方式- ==无论是否使用,都手动书写无参数构造方法,和带全部参数的构造方法==### 总结1. 创建对象的时候,由虚拟机自动调用,给成员变量进行初始化的.​2.无参数的构造方法:初始化对象时,成员变量的数据均采用默认值​3.有参数的构造方法:在初始化对象的时候,同时可以为对象进行赋值​4.如何类定义出来默认就带了无参数构造器​5.一旦定义了有参数的构造器,由系统提供的默认无参数构造器就没有了,此时就需要自己写无参数构造器​6.在写构造器时必须都手动写上无参数构造器和全部参数构造器方法==创建对象的时候,虚拟机会自动调用构造方法,作用是给成员变量进行初始化的==## 8.标准 JavaBenan1. 类名需要见名知意2. 成员变量使用private3. 提供至少两个方法 - 无参构造方法- 带全部参数构造方法  4.成员方法  - 提供一个成员变量对应的set()     get()- 有其他行为,也需要写上快捷键alt + insert alt+fn+inser## 9.面向对象内存- 字节码文件加载时进入 方法区(元空间)- 调用方法运行时就会进入栈空间,使用后会从栈空间出去- 在new时new出来的东西就会在堆中开辟一个空间并会产生一个地址值​一个对象的内存步骤![在这里插入图片描述](https://img-blog.csdnimg.cn/b4147c0a50024a3c948b3a5c5435799e.png)1. 加载class文件2. 申明局部变量3. 在堆内存中开辟一个空间4. 默认初始化5. 显示初始化6. 构造方法初始化7. 将堆内存中的地址值赋值给左边的局部变量基本数据类型- 是直接记录被赋值的值,数据值是存储在自己的空间中的- 赋值给其他的变量,也是赋值的真是的值引用数据类型- 记录堆中的地址值,从而根据地址值去获取相应的值- 赋值给其它变量时,赋值的是地址值### this的内存原理this作用:区分局部变量和成员变量this的本质:所在方法调用者的地址值this是指向调用者使用的地址值### 成员变量和局部变量的区别![在这里插入图片描述](https://img-blog.csdnimg.cn/b70acccd3e634b108f3959d309815deb.png)</code></pre></div></body></html>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络通信</title>
      <link href="/2022/11/23/%E5%8D%8E%E4%B8%89%20mstp-%E8%B7%AF%E7%94%B1%E8%81%9A%E5%90%88-ospf-%E4%B8%89%E5%B1%82%E8%81%9A%E5%90%88%20%E5%85%A5%E9%97%A8%E5%85%A8%E5%A5%97%E5%AE%9E%E9%AA%8C/"/>
      <url>/2022/11/23/%E5%8D%8E%E4%B8%89%20mstp-%E8%B7%AF%E7%94%B1%E8%81%9A%E5%90%88-ospf-%E4%B8%89%E5%B1%82%E8%81%9A%E5%90%88%20%E5%85%A5%E9%97%A8%E5%85%A8%E5%A5%97%E5%AE%9E%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <meta charset="utf-8">  <meta name="viewport" content="width=device-width, initial-scale=1.0">  <title>华三 mstp-路由聚合-ospf-三层聚合 入门全套实验</title>  <link rel="stylesheet" href="https://stackedit.io/style.css" /></head><body class="stackedit">  <div class="stackedit__html"><p>1.配置图<br><img src="https://img-blog.csdnimg.cn/3a2a5f6cf0844925b779131b056ce02d.png" alt="在这里插入图片描述"><br>2.先配置pc的ip地址</p><p>第一台pc<br><img src="https://img-blog.csdnimg.cn/dde108b6db0944b7af36fd95d4184ecb.png" alt="在这里插入图片描述"></p><p>第二台pc</p><p><img src="https://img-blog.csdnimg.cn/206caee60e8547a1b30da0607f97f3e4.png" alt="在这里插入图片描述"><br>3.打开交换机配置交换机的优先级选举根桥为sw1<br><img src="https://img-blog.csdnimg.cn/9bfcf5016aff4daba4ff81fd79b227f6.png" alt="在这里插入图片描述"></p><p>这里更改了交换机的优先级后,sw1成为了根乔</p><p>4.配置交换机连接pc端接口为边缘接口<br><img src="https://img-blog.csdnimg.cn/509b52df34374953bd090c683d253d9e.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/79fde01ad0474788964fdced2f95291c.png" alt="在这里插入图片描述"></p><p>5.配置vlan<br>1.pc1 vlan10<br>2.pc2 vlan20<br>pc端为access口<br>交换机之间为trunk口并聚合</p><p>[sw3]vlan 10 20<br>[sw3]int g 1/0/1<br>[sw3-GigabitEthernet1/0/1]p l a<br>[sw3-GigabitEthernet1/0/1]p a vlan 10</p><p><img src="https://img-blog.csdnimg.cn/ffa3caa558b14d04b984cc25159ca8dd.png" alt="在这里插入图片描述"></p><p>[sw2]vlan 10 20<br>[sw2]int g 1/0/1<br>[sw2-GigabitEthernet1/0/1]p l a<br>[sw2-GigabitEthernet1/0/1]p a vlan 20<br><img src="https://img-blog.csdnimg.cn/b99bafb135e34056932eae1467b94066.png" alt="在这里插入图片描述"></p><p>给pc口配置完vlan后 配置交换机之间的trunk口</p><p>[sw3]int b 1<br>[sw3]int r g 1/0/2 g 1/0/4<br>[sw3-if-range]p l g 1<br><img src="https://img-blog.csdnimg.cn/0a154468bd0e420ebf62249a6f3020ba.png" alt="在这里插入图片描述"><br>创建聚合后将链路加入进去</p><blockquote><p>这里代码我简写了 如果需要全部源码私信<br>这里我只放一台交换机的命令 其他除接口不同其他命令相同</p></blockquote><p>其他交换机同样操作</p><p>sw3<br><img src="https://img-blog.csdnimg.cn/9e34ce7122ef47199f6a867883a7e18d.png" alt="在这里插入图片描述"><br>sw2<br><img src="https://img-blog.csdnimg.cn/d356f54c12fd471881ca8d88f2e37df6.png" alt="在这里插入图片描述"><br>sw1</p><p><img src="https://img-blog.csdnimg.cn/904a24e772544cb4880b4df03e226de7.png" alt="在这里插入图片描述"><br>这里可以看见聚合都已经配置完成了</p><p>6.配置交换机间的trunk<br>这里trunk口必须在聚合组上配置,因为我们已经把接口都加入了聚合组</p><blockquote><p>接下来也是一台交换机的配置命令,其他交换机同样配置</p></blockquote><p>[sw1]vlan 10 20<br>[sw1]interface Bridge-Aggregation  1<br>[sw1-Bridge-Aggregation1]port link-type trunk<br>[sw1-Bridge-Aggregation1]port trunk pvid vlan 10 20</p><p>[sw1]int b 2<br>[sw1-Bridge-Aggregation2]p l t<br>[sw1-Bridge-Aggregation2]p t p vlan 10 20</p><p>先配置vlan<br><img src="https://img-blog.csdnimg.cn/16634325efff40298605a978da09fcab.png" alt="在这里插入图片描述"><br>进入聚合组1中<br><img src="https://img-blog.csdnimg.cn/ac6e218f0bb44e94927ea13a5c70f05f.png" alt="在这里插入图片描述"><br>这样就是配置成功了<br>聚合组2也需要配置<br><img src="https://img-blog.csdnimg.cn/3a77a920d5024c3e905d0a7d73fb85e3.png" alt="在这里插入图片描述"><br>sw2</p><p><img src="https://img-blog.csdnimg.cn/702305ecb14745cf83ddd33bbc55945f.png" alt="在这里插入图片描述"></p><p>sw3<br><img src="https://img-blog.csdnimg.cn/1dc4e9ed0460458a903a2741d2420746.png" alt="在这里插入图片描述"><br>配置vlan10 20 的网关<br><img src="https://img-blog.csdnimg.cn/12bd8444ae3a43f2ab2fb38a797c9483.png" alt="在这里插入图片描述"><br>命令–<br>[sw1]interface Vlan-interface 10<br>[sw1-Vlan-interface10]ip address 192.168.10.254 24</p><p>[sw1]interface Vlan-interface 20<br>[sw1-Vlan-interface20]ip address 192.168.20.254 24</p><p>[sw1]dis ip int br</p><p><img src="https://img-blog.csdnimg.cn/4088be75a227452f8ea13fea84257113.png" alt="在这里插入图片描述"><br>这里可以查验一下是否配置成功</p><p>7.配置三层聚合 三层ip地址<br>[sw1]int Route-Aggregation 4</p><blockquote><p>这里这个代码是配置三层聚合的命令与三层有差异</p></blockquote><p>首先打开交换机的三层功能<br>[sw1]int r g 1/0/5 g 1/0/6<br>[sw1-if-range]port link-mode route<br><img src="https://img-blog.csdnimg.cn/9a90d896cde3462093ad4dab8a344005.png" alt="在这里插入图片描述"><br>在加入三层聚合当中去<br>[sw1-if-range]p l g 4<br><img src="https://img-blog.csdnimg.cn/09c50fab17344b47822bd26e8764afc2.png" alt="在这里插入图片描述"><br>配置sr1上的聚合</p><p>[sr1]int Route-Aggregation 4<br>[sr1]int r g 0/0/0 g 0/0/2<br>[sr1-if-range]p l g 4<br><img src="https://img-blog.csdnimg.cn/43374c41ebc14a608f695dbf813f1500.png" alt="在这里插入图片描述"></p><p>配置三层聚合的ip地址</p><p>[sw1-Route-Aggregation4]ip address 10.0.0.1 24</p><p>[sr1-Route-Aggregation4]ip ad 10.0.0.2 24</p><p><img src="https://img-blog.csdnimg.cn/bed51ab01293438ba7267e6a036bd9fb.png" alt="在这里插入图片描述"><br>这里可以查看配置成功了</p><p>查验可通信<br><img src="https://img-blog.csdnimg.cn/8e062fcddc544751ab3b22fe008a0feb.png" alt="在这里插入图片描述"><br>8.配置ospf 共享路由<br>[sw1]interface LoopBack 0<br>[sw1-LoopBack0]ip ad 4.4.4.4 32</p><p>sr1配置<br><img src="https://img-blog.csdnimg.cn/dcbe50d63db84fbf93fe65302a0a63b0.png" alt="在这里插入图片描述"><br>sr2配置<br><img src="https://img-blog.csdnimg.cn/a0bbf7620df14dc68afb9b2b693d1e23.png" alt="在这里插入图片描述"><br>sr3配置<br><img src="https://img-blog.csdnimg.cn/57da7bce36284515bca7938064a71cb8.png" alt="在这里插入图片描述"></p><p>接下来配置sr1-sr2-sr3间链路ip</p><p>[sr1]int g 0/0/1<br>[sr1-GigabitEthernet0/0/1]ip ad 20.0.0.1 24</p><p>[sr2]int g 0/0/0<br>[sr2-GigabitEthernet0/0/0]ip ad 20.0.0.2 24</p><p>[sr2]int g 0/0/1<br>[sr2-GigabitEthernet0/0/1]ip ad 30.0.0.1 24</p><p>[sr3]int g 0/0/0<br>[sr3-GigabitEthernet0/0/0]ip ad 30.0.0.2 24</p><p>配置ospf<br>sw1<br><img src="https://img-blog.csdnimg.cn/9a7b04ce264945b3be4255a72cd3a2b5.png" alt="在这里插入图片描述"><br>注意这里的掩码要写反掩码<br>sr1<br><img src="https://img-blog.csdnimg.cn/bd3553117bf64538a1a28606d1c0c400.png" alt="在这里插入图片描述"><br>这里可以看见宣告ip后 立马就建立起了邻居关系<br>sr2<br><img src="https://img-blog.csdnimg.cn/5cc48efeafc146e09ff99861aac83f6f.png" alt="在这里插入图片描述"><br>sr3<br><img src="https://img-blog.csdnimg.cn/a6b2e95b1b3d4bce82278a9b059630e9.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/407fd0ad38484c0492e208504d8e900d.png" alt="在这里插入图片描述"><br>这个显示就是邻居关系建立成功了,可能有时候会比较慢,需要等待一会</p><p>我们查看一下路由是否学习成功<br><img src="https://img-blog.csdnimg.cn/27e80bda2941418d85cf71f1087098b8.png" alt="在这里插入图片描述"><br>在sr1上可以看见 来自各邻居学习来的路由</p><p>sr2<br><img src="https://img-blog.csdnimg.cn/dbee6f5265064901860a1f85ff50c7b6.png" alt="在这里插入图片描述"><br>sr3<br><img src="https://img-blog.csdnimg.cn/2b9162b0472c4b239c71bff544f2608c.png" alt="在这里插入图片描述"><br>三台路由器都学习成功了</p><p>最后一步查看与pc是否可以通信<br><img src="https://img-blog.csdnimg.cn/1b91611daba94bd39a7027e362a4e2f7.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/3c124571a7ca425f929d472f2aadeae5.png" alt="在这里插入图片描述"><br>这里就实现了全网通</p><p>全部实验完毕!!!</p></div></body></html>]]></content>
      
      
      <categories>
          
          <category> ospf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> H3C配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络通信</title>
      <link href="/2022/11/23/H3C--IBGP%E5%AF%B9%E7%AD%89%E4%BD%93--EBGP%E5%AF%B9%E7%AD%89%E4%BD%93%20OSPF%E5%BC%95%E5%85%A5BGP%E8%B7%AF%E7%94%B1%E5%AE%9E%E9%AA%8C(%E5%B8%A6%E5%AE%9E%E9%AA%8C%E4%BB%A3%E7%A0%81)/"/>
      <url>/2022/11/23/H3C--IBGP%E5%AF%B9%E7%AD%89%E4%BD%93--EBGP%E5%AF%B9%E7%AD%89%E4%BD%93%20OSPF%E5%BC%95%E5%85%A5BGP%E8%B7%AF%E7%94%B1%E5%AE%9E%E9%AA%8C(%E5%B8%A6%E5%AE%9E%E9%AA%8C%E4%BB%A3%E7%A0%81)/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head>  <meta charset="utf-8">  <meta name="viewport" content="width=device-width, initial-scale=1.0">  <title>H3C--IBGP对等体--EBGP对等体 OSPF引入BGP路由实验(带实验代码)</title>  <link rel="stylesheet" href="https://stackedit.io/style.css" /></head><body class="stackedit">  <div class="stackedit__html"><h2><a id="BGP_0"></a>BGP实验</h2><p><img src="https://img-blog.csdnimg.cn/d8d7e66e9f91413c8541fdbfd3da9831.png" alt="在这里插入图片描述"></p><h2><a id="_EBGPIBGPOSPFBGP_3"></a>需求: 建立EBGP–IBGP邻居关系,OSPF引入BGP</h2><h2><a id="_4"></a>实现全网通</h2><p>首先配置IBGP底层的ospf互通</p><h3><a id="MSR1_9"></a>MSR1的配置</h3><p>[msr1]int l 0<br>[msr1-LoopBack0]ip ad 1.1.1.1 32<br>[msr1-LoopBack0]qu<br>[msr1]int g 0/1<br>[msr1-GigabitEthernet0/1]ip ad 10.0.0.1 24<br>[msr1-GigabitEthernet0/0]ip ad 40.0.0.1 24</p><p>[msr1]ospf 1 router-id 1.1.1.1<br>[msr1-ospf-1]ar 0<br>[msr1-ospf-1-area-0.0.0.0]ne<br>[msr1-ospf-1-area-0.0.0.0]network 1.1.1.1 0.0.0.0<br>[msr1-ospf-1-area-0.0.0.0]ne<br>[msr1-ospf-1-area-0.0.0.0]network 10.0.0.0 0.0.0.255<br>[msr1-ospf-1-area-0.0.0.0]qu</p><h3><a id="MSR2_25"></a>MSR2配置</h3><p>[msr2]int l 0<br>[msr2-LoopBack0]ip ad 2.2.2.2 32<br>[msr2]int g 0/0<br>[msr2-GigabitEthernet0/0]ip ad 10.0.0.2 24<br>[msr2-GigabitEthernet0/0]qu<br>[msr2]int g 0/1<br>[msr2-GigabitEthernet0/1]ip ad 20.0.0.1 24<br>[msr2-GigabitEthernet0/1]qu<br>[msr2]ospf 1 router-id 2.2.2.2<br>[msr2-ospf-1]ar 0</p><p>[msr2-ospf-1-area-0.0.0.0]network 2.2.2.2 0.0.0.0<br>[msr2-ospf-1-area-0.0.0.0]network 10.0.0.0 0.0.0.255<br>[msr2-ospf-1-area-0.0.0.0]network 20.0.0.0 0.0.0.255<br>[msr2-ospf-1-area-0.0.0.0]qu</p><h3><a id="MSR3_42"></a>MSR3配置</h3><p>[msr3]int l 0<br>[msr3-LoopBack0]ip ad 3.3.3.3 32<br>[msr3-LoopBack0]qu<br>[msr3]int g 0/0<br>[msr3-GigabitEthernet0/0]ip ad 20.0.0.2 24<br>[msr3-GigabitEthernet0/0]qu<br>[msr3]int g 0/1<br>[msr3-GigabitEthernet0/1]ip ad 30.0.0.1 24<br>[msr3-GigabitEthernet0/1]qu<br>[msr3]ospf 1 ro<br>[msr3]ospf 1 router-id 3.3.3.3<br>[msr3-ospf-1]ar 0<br>[msr3-ospf-1-area-0.0.0.0]network 3.3.3.3 0.0.0.0<br>[msr3-ospf-1-area-0.0.0.0]network 20.0.0.0 0.0.0.255</p><p>查看ospf邻居建立是否成功<br><img src="https://img-blog.csdnimg.cn/dc43f684490c4ac6acd2bfa308840d10.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/9ac968a37f144af4a9815295b398c6ad.png" alt="在这里插入图片描述"><br>这里可以看到都成功了<br>查看路由是否学习成功<br><img src="https://img-blog.csdnimg.cn/2582cade68fb4338be308fc20627ad6f.png" alt="在这里插入图片描述"></p><p>建立IBGP MSR1与MSR3的对等体关系<br>[msr1]bgp 300<br>[msr1-bgp-default]peer 3.3.3.3 as-number 300<br>[msr1-bgp-default]peer 3.3.3.3 connect-interface LoopBack 0</p><p>[msr1-bgp-default]address-family ipv4<br>[msr1-bgp-default-ipv4]peer 3.3.3.3 enable<br><img src="https://img-blog.csdnimg.cn/bb2cd7fbfd2e4af0baf9c1b33024eb05.png" alt="在这里插入图片描述"></p><p>MSR3<br>[msr3]bgp 300<br>[msr3-bgp-default]peer 1.1.1.1 as-number 300<br>[msr3-bgp-default]peer 1.1.1.1 connect-interface LoopBack 0<br>[msr3-bgp-default]address-family ipv4<br>[msr3-bgp-default-ipv4]peer 1.1.1.1 enable<br><img src="https://img-blog.csdnimg.cn/3b5fa3cb045b4ef49f680e760912b43a.png" alt="在这里插入图片描述"><br>这里对等体关系已经建立成功了</p><p>开始建立EBGP</p><p><img src="https://img-blog.csdnimg.cn/848bd99a997f4cd8b862daad9b142ce2.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/820b4c0ca4784e1f83cb312abc8a83ea.png" alt="在这里插入图片描述"><br>这里已经和MSR4建立EBGP邻居成功了<br><img src="https://img-blog.csdnimg.cn/4131400188524209bb29297ed3bc2302.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ada3d7b118134b7aa5b16623e72d4f16.png" alt="在这里插入图片描述"><br>MSR5<br>[msr5]bgp 100<br>[msr5-bgp-default]peer 40.0.0.1 as 300<br>[msr5-bgp-default]ad ipv4<br>[msr5-bgp-default-ipv4]peer 40.0.0.1 enable</p><p><img src="https://img-blog.csdnimg.cn/bbfd74b729aa4ad980a76eeefc9427cf.png" alt="在这里插入图片描述"><br>跟MSR5的EBGP对等体也建立成功了</p><p>接下来引入EBGP的路由信息到中间的MSR2的路由上<br>[msr1]ospf 1<br>[msr1-ospf-1]import-route bgp</p><p>[msr3]ospf 1<br>[msr3-ospf-1]import-route bgp</p><p><img src="https://img-blog.csdnimg.cn/f3e8d8c9a20a40bc86f6b72124dff81d.png" alt="在这里插入图片描述"><br>可以看到路由引入到了MSR2的路由表中<br>实现了全网通</p></div></body></html>]]></content>
      
      
      <categories>
          
          <category> EBG-IBGP-OSPF引入BGP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> H3C配置 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
